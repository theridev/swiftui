#!/bin/bash

#  ______        _____ _____ _____
# / ___\ \      / /_ _|  ___|_   _|
# \___ \\ \ /\ / / | || |_    | |
#  ___) |\ V  V /  | ||  _|   | |
# |____/  \_/\_/  |___|_|     |_|
#
# Name: SwiftUI
# Version: v0.01-alpha
# A TUI moddule for the Swift Linux operating system
# Developed by theridev
#
# "It's midnight and I want to go to sleep so much, I need to finish writing these comments though" - the author himself, september 7th 2024
#
# LICENSE:
# Please do not steal the following code, it makes me feel bad.

# PUBLISHED ON GITHUB ON OCTOBER 25th, 2024.
# For anyone reading this: I could have done this earlier. The development goes on.

# Calendar app - called from appmenu()
calendar() {
  currentdate=$(date +'%d %m %Y') # an argument needed for the "calendar" function of the dialog module.
  fulldate=$(date)                # used to show full date in the body text
  dialog --no-cancel --title "Calendar" --calendar "Today's date is $fulldate" 5 50 $currentdate
  if $RUNNING_IN_SCRIPT; then
    appmenu
  fi
}

# The about system dialogue using neofetch (with stdout flag) to show system specs
about() {
  dialog --prgbox "// SwiftLinux v0.01-alpha //\n\nDeveloped by theridev: https://github.com/theridev\n\n" "neofetch --stdout" 40 80
}

# a tool to easily change your hostname
hostnametui() {
  hostname=$(hostname)
  NEWHOSTNAME=$(dialog --title "Hostname Change" --inputbox "Your hostname is $hostname. Enter your new hostname here:" 15 30 3>&1 1>&2 2>&3 3>&-)
  clear
  hostnamectl set-hostname "$NEWHOSTNAME" --static
  if $RUNNING_IN_SCRIPT; then
    admintools
  fi
}

# a tool to control your volume using amixer, part of controlstui
volumetui() {
  volume=$(amixer sget Master | awk -F"[][]" '/Left:/ { print $2 }') # gets current volume: uses awk to filter out all the unnecessary content from the amixer stats command.
  newVolume=$(dialog --title "Set Volume" --inputbox "Current volume is $volume. Enter new volume: _%" 15 30 3>&1 1>&2 2>&3 3>&-)
  settingVolume="$newVolume%"
  amixer --quiet set Master "$settingVolume"
  if $RUNNING_IN_SCRIPT; then
    controlstui
  fi
}

# a handy tool to control your brightness using brightnessctl, part of controlstui
brightnesstui() {
  brightness=$(cat /sys/class/backlight/acpi_video0/actual_brightness) # gets current brightness from the mentioned file
  newBrightness=$(dialog --title "Set Brightness" --inputbox "Current brightness is $brightness. Enter new brightness: _%" 15 30 3>&1 1>&2 2>&3 3>&-)
  brightnessctl set "$newBrightness" --quiet
  if $RUNNING_IN_SCRIPT; then
    controlstui
  fi
}

# A category of options: volumetui and brightnesstui
controlstui() {
  CONTROLS=$(dialog --title "Options" --menu "" 12 45 25 1 "Volume" 2 "Brightness" 3>&1 1>&2 2>&3 3>&-)
  case $CONTROLS in
  1)
    clear
    volumetui
    ;;
  2)
    clear
    brightnesstui
    ;;
  esac
  if $RUNNING_IN_SCRIPT; then
    options
  fi
}

# subcategory used to manage your hostname or change locales
admintools() {
  CONTROLS=$(dialog --title "Options" --menu "" 12 45 25 1 "Change Locales" 2 "Change Hostname" 3>&1 1>&2 2>&3 3>&-)
  case $CONTROLS in
  1)
    dialog --title "Warning" --msgbox "You will have to uncomment a specific locale manually."
    clear
    sudo nano /etc/locale.gen
    clear
    sudo locale-gen
    ;;
  2)
    hostnametui
    ;;
  esac

  if $RUNNING_IN_SCRIPT; then
    options
  fi
}

# the options menu
options() {
  OPTION=$(dialog --title "Options" --menu "" 12 45 25 1 "Controls" 2 "Connection" 3 "Admin Tools" 4 "About" 3>&1 1>&2 2>&3 3>&-)

  case $OPTION in
  1)
    controlstui
    ;;
  2)
    nmtui # allows to set up the internet connection using the Network Manager TUI command.
    options
    ;;
  3)
    admintools
    ;;
  4)
    about
    ;;
  esac

  if $RUNNING_IN_SCRIPT; then
    main
  fi
}

# A simple countdown app
countdown() {
  TIME=$(dialog --title "Countdown" --inputbox "Enter in seconds:" 15 30 3>&1 1>&2 2>&3 3>&-)
  dialog --title "Countdown..." --pause "" 20 40 $TIME
  if $RUNNING_IN_SCRIPT; then
    appmenu
  fi
}

# A menu of options with all the apps
appmenu() {
  APP=$(dialog --title "Apps" --menu "" 12 45 25 1 "Distrohoop" 2 "Countdown" 3 "PacTUI" 4 "Calendar" 5 "More apps..." 3>&1 1>&2 2>&3 3>&-)

  case $APP in
  1)
    # I got the laptop back
    dialog --msgbox "Coming soon!" 20 35
    appmenu
    ;;
  2)
    countdown
    ;;
  3)
    # Yes, you can run PacTUI both from the main and the app menu
    PacTUI
    ;;
  4)
    calendar
    ;;
  5)
    # That is alpha-v0.01. What did you expect?
    dialog --msgbox "More apps coming soon!" 5 30
    appmenu
    ;;
  esac
  if $RUNNING_IN_SCRIPT; then
    main
  fi
}

# A simple TUI module for installing pacman packages.
PacTUI() {
  PACKAGE=$(dialog --title "PacTUI" --inputbox "Enter a name of a package you want to install." 15 30 3>&1 1>&2 2>&3 3>&-)
  #USERNAME=$(whoami)
  #PASSWORD=$(dialog --title "Password" --passwordbox "Enter password for user $whoami:" 15 30 3>&1 1>&2 2>&3 3>&-)
  clear
  if pacman -Ss "$PACKAGE" >/dev/null 2>&1; then
    sudo pacman --noconfirm -S "$PACKAGE"
  else
    dialog --msgbox "Invalid package name!" 15 30
  fi
  if $RUNNING_IN_SCRIPT; then
    main
  fi
}

# Allows to either restart, shutdown or suspend the current device
bootoptions() {
  CHOICE=$(dialog --title "Boot Options" --menu "" 12 45 25 1 "Shutdown" 2 "Restart" 3 "Sleep" 3>&1 1>&2 2>&3 3>&-)

  case $CHOICE in
  1)
    sudo shutdown now
    ;;
  2)
    sudo reboot now
    ;;
  3)
    sudo systemctl suspend
    main
    ;;

  esac
  if $RUNNING_IN_SCRIPT; then
    main
  fi
}

# The main function.
main() {
  CHOICE=$(dialog --nocancel --menu "Welcome to Swift Linux!" 12 45 25 1 "Terminal" 2 "Apps" 3 "Options" 4 "PacTUI" 5 "Shutdown" 3>&1 1>&2 2>&3 3>&-)

  case $CHOICE in
  1)
    #Opens the terminal... By quitting.
    clear
    exit 0
    ;;
  2)
    appmenu
    ;;
  3)
    options
    ;;
  4)
    PacTUI
    ;;
  5)
    bootoptions
    ;;
  esac
}

# Allows to run specific functions
case "$1" in
"calendar")
  RUNNING_IN_SCRIPT=false
  calendar
  clear
  ;;
"about")
  RUNNING_IN_SCRIPT=false
  about
  clear
  ;;
"hostnametui")
  RUNNING_IN_SCRIPT=false
  hostnametui
  clear
  ;;
"volumetui")
  RUNNING_IN_SCRIPT=false
  volumetui
  clear
  ;;
"brightnesstui")
  RUNNING_IN_SCRIPT=false
  brightnesstui
  clear
  ;;
"controlstui")
  RUNNING_IN_SCRIPT=false
  controlstui
  clear
  ;;
"admintools")
  RUNNING_IN_SCRIPT=false
  admintools
  clear
  ;;
"countdown")
  RUNNING_IN_SCRIPT=false
  countdown
  clear
  ;;
"appmenu")
  RUNNING_IN_SCRIPT=false
  appmenu
  clear
  ;;
"PacTUI")
  RUNNING_IN_SCRIPT=false
  PacTUI
  clear
  ;;
"options")
  RUNNING_IN_SCRIPT=false
  options
  clear
  ;;
"bootoptions")
  RUNNING_IN_SCRIPT=false
  bootoptions
  clear
  ;;
*)
  # Default to `main` if no valid function name is passed
  RUNNING_IN_SCRIPT=true
  main
  ;;
esac

# Hope you enjoyed reading my goofy comments
# LGBTQ+ rights btw
# - theridev
